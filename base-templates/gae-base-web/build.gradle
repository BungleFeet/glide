apply plugin: 'gaelyk'
apply plugin: 'idea'

gae {
    disableUpdateCheck = true
    optimizeWar = false
    appcfg {
        oauth2 = true
    }
}

if (new File(projectDir.path + "/glide.gradle").exists()) {
    apply from: 'glide.gradle'
}

def templateJavaVersion = 1.7
def templateGroovyVersion = '2.2.1'
def templateGaeVersion = '1.8.9'
def templateGaelykVersion = '2.0'
def templateVersion = '0.1-test'
def templateGradleVersion = "1.10"

sourceCompatibility = templateJavaVersion
targetCompatibility = templateJavaVersion

webAppDirName = "app"
sourceSets {
    main.groovy.srcDir 'src'
    test.groovy.srcDir 'test'
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-gaelyk-plugin:0.5'
        classpath 'org.gradle.api.plugins:gradle-gae-plugin:0.9', {
            exclude module: "gradle-fatjar-plugin"
        }
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile "org.codehaus.groovy:groovy-all:${templateGroovyVersion}"
    compile "com.google.appengine:appengine-api-1.0-sdk:$templateGaeVersion",
            "com.google.appengine:appengine-api-labs:$templateGaeVersion"
    compile "org.gaelyk:gaelyk:$templateGaelykVersion"
    compile 'org.sitemesh:sitemesh:3.0-alpha-2'
    compile 'glide:filters:0.3-SNAPSHOT'


    testCompile 'junit:junit:4.10'
    testCompile "com.google.appengine:appengine-api-stubs:$templateGaeVersion",
                "com.google.appengine:appengine-testing:$templateGaeVersion"

    gaeSdk "com.google.appengine:appengine-java-sdk:$templateGaeVersion"
}

task tempalteVersion << {
    println "$templateVersion"
}

task wrapper(type: Wrapper) {
    gradleVersion = templateGradleVersion
}